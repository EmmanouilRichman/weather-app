{"version":3,"sources":["Views/Home.js","Views/Weather.js","Views/GetInfo.js","Components/Navbar.js","App.js","index.js"],"names":["Home","Weather","props","useState","name","setName","region","setRegion","country","setCountry","forecast","setForecast","URL","location","useEffect","a","axios","get","res","data","forecastday","fetch","map","day","className","date","src","condition","icon","alt","avgtemp_f","text","GetInfo","city","setCity","redirect","setRedirect","onSubmit","type","value","onChange","e","target","required","to","pathname","Navbar","style","textDecoration","App","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"qSAEe,SAASA,IACpB,OACI,gCACI,2DACA,qI,2DCAG,SAASC,EAAQC,GAAQ,IAAD,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,OAERF,mBAAS,IAFD,mBAE7BG,EAF6B,KAErBC,EAFqB,OAGNJ,mBAAS,IAHH,mBAG7BK,EAH6B,KAGpBC,EAHoB,OAIJN,mBAAS,IAJL,mBAI7BO,EAJ6B,KAInBC,EAJmB,KAK7BC,EAAG,0DAND,iCAMC,cAA+DV,EAAMW,SAASX,MAAMW,SAApF,WAeT,OAbCC,qBAAU,YACI,uCAAG,4BAAAC,EAAA,sEACQC,IAAMC,IACpBL,GAFM,OACJM,EADI,OAIVb,EAAQa,EAAIC,KAAKN,SAAST,MAC1BG,EAAUW,EAAIC,KAAKN,SAASP,QAC5BG,EAAWS,EAAIC,KAAKN,SAASL,SAC7BG,EAAYO,EAAIC,KAAKT,SAASU,aAPpB,2CAAH,qDASXC,KACD,CAACT,IAGA,gCACI,yDAA4BR,EAA5B,KAAoCE,EAApC,KAA8CE,KAEzCE,EAASY,KAAI,SAAAC,GACX,OACC,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,6BAAKD,EAAIE,OACT,qBAAKC,IAAKH,EAAIA,IAAII,UAAUC,KAAMC,IAAI,eACtC,8BAAIN,EAAIA,IAAIO,UAAU,6CACtB,4BAAIP,EAAIA,IAAII,UAAUI,kBCjCnC,SAASC,IAAW,IAAD,EAEV7B,mBAAS,IAFC,mBAE3B8B,EAF2B,KAErBC,EAFqB,OAGF/B,oBAAS,GAHP,mBAG3BgC,EAH2B,KAGjBC,EAHiB,KAQ9B,OAAgB,IAAbD,EAEC,gCACI,oEACA,uBAAME,SAPlB,WACID,GAAY,IAMJ,UACG,+CACA,uBAAOE,KAAK,OAAOC,MAAON,EAAMO,SAAU,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOH,QAAQI,UAAQ,IAChF,uBACC,wBAAQL,KAAK,SAASC,MAAM,SAA5B,0BAOJ,8BACI,cAAC,IAAD,CAAUK,GAAI,CACVC,SAAU,WACV3C,MAAO,CAACW,SAAUoB,QC3BvB,SAASa,IACpB,OACQ,qBAAItB,UAAU,MAAd,UACQ,6BAAI,cAAC,IAAD,CAAMoB,GAAG,IAAIG,MAAO,CAAEC,eAAgB,WAAtC,oBACJ,6BAAI,cAAC,IAAD,CAAMJ,GAAG,WAAWG,MAAO,CAAEC,eAAgB,WAA7C,6BCiBTC,MAjBf,WACE,OACE,8BACE,eAAC,IAAD,WACE,cAACH,EAAD,IACA,cAAC,IAAD,CAAOI,KAAK,IAAIC,OAAK,EAArB,SACE,cAACnD,EAAD,MAEF,cAAC,IAAD,CAAOkD,KAAK,WAAWE,OAAQ,SAAClD,GAAD,OAAW,cAACD,EAAD,eAAaC,OACvD,cAAC,IAAD,CAAOgD,KAAK,WAAZ,SACE,cAAClB,EAAD,YCXVqB,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f134c84.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Home() {\n    return (\n        <div>\n            <h1>Welcome to my Weather App</h1>\n            <p>This simple app allows you too enter a city or zipcode and find\n                the 3 day forecast for that area.\n            </p>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport axios from 'axios';\nimport '../weather.css';\n\n\nconst KEY = \"d7908f4f11ef423aa9854244202511\";\nexport default function Weather(props) {\n    const[name, setName] = useState('');\n    const[region, setRegion] = useState('');\n    const[country, setCountry] = useState('');\n    const[forecast, setForecast] = useState([]);\n    const URL = `https://api.weatherapi.com/v1/forecast.json?key=${KEY}&q=${props.location.props.location}&days=3`\n\n     useEffect(() => {\n        const fetch = async () =>{\n            const res = await axios.get(\n                URL\n            );\n            setName(res.data.location.name)\n            setRegion(res.data.location.region)\n            setCountry(res.data.location.country)\n            setForecast(res.data.forecast.forecastday)\n        }\n        fetch();\n    }, [URL]);\n    // console.log(forecast[0].date);\n    return (\n        <div>\n            <h1>Three Day forecast for {name}, {region}, {country}</h1>\n\n                {forecast.map(day =>{\n                   return( \n                    <div className=\"Row\">\n                        <div className=\"Col\">\n                            <h3>{day.date}</h3>\n                            <img src={day.day.condition.icon} alt=\"conditions\"></img>\n                            <p>{day.day.avgtemp_f}<span>&#8457;</span></p>\n                            <p>{day.day.condition.text}</p>\n                        </div>\n                   </div>\n                   );\n                })}\n        \n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport {Redirect} from 'react-router-dom';\n\n\nexport default function GetInfo() {\n\nconst [city, setCity] = useState(\"\");\nconst [redirect, setRedirect] = useState(false);\n\nfunction handleSubmit(){\n    setRedirect(true);\n}\n    if(redirect === false){\n    return (\n        <div>\n            <h1>Please Enter Your Desired City/Zip</h1>\n            <form onSubmit={handleSubmit}>\n               <label>City/Zip: </label>\n               <input type=\"text\" value={city} onChange={e => setCity(e.target.value)} required />\n               <br></br>\n                <button type=\"submit\" value=\"Submit\">Submit</button>\n            </form>\n        </div>\n        )\n    }\n    else{\n        return(\n            <div>\n                <Redirect to={{\n                    pathname: '/weather',\n                    props: {location: city}\n                }}/>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n    return (\n            <ul className=\"nav\">\n                    <li><Link to=\"/\" style={{ textDecoration: 'inherit' }}>Home</Link></li>\n                    <li><Link to=\"/getinfo\" style={{ textDecoration: 'inherit' }}>Enter City</Link></li>\n            </ul>\n    );\n}\n\n","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './Views/Home';\nimport Weather from './Views/Weather';\nimport GetInfo from './Views/GetInfo';\nimport Navbar from './Components/Navbar';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/weather\" render={(props) => <Weather {...props}/>}/>\n        <Route path=\"/getinfo\">\n          <GetInfo />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './navbar.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}